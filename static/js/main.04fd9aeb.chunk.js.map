{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","position","top","zIndex","padding","background","border","children","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","store","_useState","useState","_useState2","slicedToArray","searchResults","setSearchResults","text","useSelector","searchRobots","searchField","getRobots","users","pending","isPending","dispatch","useDispatch","useEffect","fetch","then","res","json","data","payload","catch","filteredRobots","filter","robot","toLowerCase","includes","newRobot","components_Scroll","components_SearchBox","event","target","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","objectSpread","action","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_containers_App"],"mappings":"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","file":"static/js/main.04fd9aeb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n        return(\r\n            <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n                <img alt=\"\" src={`https://robohash.org/${id}?size=200x200`} />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n    return(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) =>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t  <Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t\t    />\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t  <div className = 'pa2'> \r\n\t\t<input className = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange = {searchChange} />\r\n\t  </div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{position: 'sticky', top: '0', zIndex: '5', padding: '10px', background: 'linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%)', border: '1px solid black'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState({hasError: true })\r\n}\t\r\n\r\nrender(){\r\n\tif(this.state.hasError){\r\n\t\treturn <h1>Oooops. That is not good</h1>\r\n\t}\r\n\treturn this.props.children\r\n}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport'./App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nimport {setSearchField, requestRobots} from '../actions';\r\n\r\n\r\nconst App = ({store}) => {\r\n\r\n\tconst [searchResults, setSearchResults] = useState([]);\r\n\tconst text = useSelector(state => state.searchRobots.searchField);\r\n\tconst robots = useSelector(state => state.getRobots.users);\r\n\tconst pending = useSelector(state => state.getRobots.isPending)\r\n\tconst dispatch = useDispatch();\r\n\tconst onSearchChange= (event) => {\r\n\t\tdispatch(setSearchField(event.target.value))\r\n\t}\r\n\r\n\tuseEffect(() =>  {\r\n        dispatch(requestRobots());\r\n    }, [dispatch])\r\n\r\n\tuseEffect(() => {\r\n        let filteredRobots = robots.filter(robot => {\r\n            return(\r\n                robot.name.toLowerCase().includes(text.toLowerCase())\r\n            );\r\n        });\r\n        setSearchResults(filteredRobots);\r\n    }, [text,robots])\r\n\r\n\tconst newRobot = searchResults;\r\n\r\n\treturn pending ?\r\n\t\t<h1>Loading...</h1> :\r\n\t\t   (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange ={onSearchChange}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t {\r\n                    text === \"\" ? <CardList robots={ robots }/> : <CardList robots={ newRobot }/>\r\n                     }\r\n\t\t\t\t\t</ErrorBoundary>\t\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\r\n\r\nexport default App;","import { \r\n    CHANGE_SEARCH_FIELD ,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants\"\r\n\r\nexport const setSearchField = (text) => {\r\n    return{\r\n        type: CHANGE_SEARCH_FIELD,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    CHANGE_SEARCH_FIELD ,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants\"\r\n\r\nconst initialState = {\r\n    searchField: '',\r\n}\r\n\r\nexport const searchRobots = ( state = initialState , { type, payload } ) => {\r\n    switch(type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return { ...state, \r\n                searchField: payload \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    users: [],\r\n    error: null\r\n}\r\n\r\nexport const getRobots = (state = initialStateRobots, action) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return { ...state,\r\n                isPending: true\r\n            }\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return {...state,\r\n                users: action.payload,\r\n                isPending: false\r\n            }\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return {...state,\r\n                users: action.payload,\r\n                isPending:false\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunkMiddleWare from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport {searchRobots, getRobots} from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, getRobots });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare, logger));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>  \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}