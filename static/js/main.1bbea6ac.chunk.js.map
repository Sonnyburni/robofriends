{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/header.js","containers/App.js","actions.js","constants.js","reportWebVitals.js","reducers.js","serviceWorker.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","position","top","zIndex","padding","background","border","children","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","Header","apply","arguments","nextProps","nextState","App","store","_useState","useState","_useState2","slicedToArray","searchResults","setSearchResults","text","useSelector","searchRobots","searchField","getRobots","users","pending","isPending","dispatch","useDispatch","useEffect","fetch","then","res","json","data","payload","catch","filteredRobots","filter","robot","toLowerCase","includes","newRobot","components_Scroll","header","components_SearchBox","event","target","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initialStateRobots","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","logger","createLogger","rootReducer","combineReducers","length","undefined","objectSpread","action","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_containers_App","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1bbea6ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n        return(\r\n            <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n                <img alt=\"\" src={`https://robohash.org/${id}?size=200x200`} />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n    return(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) =>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t  <Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t\t    />\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t  <div className = 'pa2'> \r\n\t\t<input \r\n\t\t    aria-label = 'Search Robots'\r\n\t\t    className = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange = {searchChange} />\r\n\t  </div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{position: 'sticky', top: '0', zIndex: '5', padding: '10px', background: 'linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%)', border: '1px solid black'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState({hasError: true })\r\n}\t\r\n\r\nrender(){\r\n\tif(this.state.hasError){\r\n\t\treturn <h1>Oooops. That is not good</h1>\r\n\t}\r\n\treturn this.props.children\r\n}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component{\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return false;\r\n    }\r\n    render(){\r\n        return <h1 className='f1'>RoboFriends</h1>\r\n    }\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport'./App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport Header from\t'../components/header';\r\n\r\nimport {setSearchField, requestRobots} from '../actions';\r\n\r\n\r\nconst App = ({store}) => {\r\n\r\n\tconst [searchResults, setSearchResults] = useState([]);\r\n\tconst text = useSelector(state => state.searchRobots.searchField);\r\n\tconst robots = useSelector(state => state.getRobots.users);\r\n\tconst pending = useSelector(state => state.getRobots.isPending)\r\n\tconst dispatch = useDispatch();\r\n\tconst onSearchChange= (event) => {\r\n\t\tdispatch(setSearchField(event.target.value))\r\n\t}\r\n\r\n\tuseEffect(() =>  {\r\n        dispatch(requestRobots());\r\n    }, [dispatch])\r\n\r\n\tuseEffect(() => {\r\n        let filteredRobots = robots.filter(robot => {\r\n            return(\r\n                robot.name.toLowerCase().includes(text.toLowerCase())\r\n            );\r\n        });\r\n        setSearchResults(filteredRobots);\r\n    }, [text,robots])\r\n\r\n\tconst newRobot = searchResults;\r\n\r\n\treturn pending ?\r\n\t\t<h1>Loading...</h1> :\r\n\t\t   (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<SearchBox searchChange ={onSearchChange}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t {\r\n                    text === \"\" ? <CardList robots={ robots }/> : <CardList robots={ newRobot }/>\r\n                     }\r\n\t\t\t\t\t</ErrorBoundary>\t\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\r\n\r\nexport default App;","import { \r\n    CHANGE_SEARCH_FIELD ,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants\"\r\n\r\nexport const setSearchField = (text) => {\r\n    return{\r\n        type: CHANGE_SEARCH_FIELD,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    CHANGE_SEARCH_FIELD ,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants\"\r\n\r\nconst initialState = {\r\n    searchField: '',\r\n}\r\n\r\nexport const searchRobots = ( state = initialState , { type, payload } ) => {\r\n    switch(type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return { ...state, \r\n                searchField: payload \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    users: [],\r\n    error: null\r\n}\r\n\r\nexport const getRobots = (state = initialStateRobots, action={}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return { ...state,\r\n                isPending: true\r\n            }\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return {...state,\r\n                users: action.payload,\r\n                isPending: false\r\n            }\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return {...state,\r\n                users: action.payload,\r\n                isPending:false\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunkMiddleWare from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport {searchRobots, getRobots} from './reducers';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, getRobots });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare, logger));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>  \n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}