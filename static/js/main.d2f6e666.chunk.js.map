{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.d2f6e666.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email,id }) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t);\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n    return(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) =>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t  <Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t\t    />\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t  <div className = 'pa2'> \r\n\t\t<input className = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange = {searchChange} />\r\n\t  </div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\nconst scroll = (props) => {\r\n\treturn(\r\n\t\t<div style = {{ overflowY:'scroll', border: '1px solid black', height:'500px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default scroll","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState({hasError: true })\r\n}\t\r\n\r\nrender(){\r\n\tif(this.state.hasError){\r\n\t\treturn <h1>Oooops. That is not good</h1>\r\n\t}\r\n\treturn this.props.children\r\n}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport'./App.css';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\n\r\nconst state = {\r\n\trobots: [],\r\n\tsearchfield: ''\r\n}\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t        searchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t .then(response => response.json())\r\n         .then(users => this.setState({robots:users}));\r\n\t}\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t}\r\n\trender (){\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading...</h1> :\r\n\t\t    (\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange ={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t  <ErrorBoundary>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t  </ErrorBoundary>\t\r\n\t\t\t\t\t</Scroll>\t\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\t\r\n\t\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}